install.packages(“googlesheets”) library(googlesheets)
install.packages(“googlesheets”) library(googlesheets)
demo()
install.packages(“googlesheets”)
install.packages(googlesheets)
install.packages('googlesheets')
library(googlesheets)
library(googlesheets)
WeatherDataURL <- gs_url(“https://docs.google.com/spreadsheets/d/1UNQ_LMXFdq6GmQRCUhGd1iY4GQ_a4qEN0sH_cDylU_k/edit?usp=sharing”)
history
history()
WeatherDataURL <- gs_url('https://docs.google.com/spreadsheets/d/1UNQ_LMXFdq6GmQRCUhGd1iY4GQ_a4qEN0sH_cDylU_k/edit?usp=sharing')
gs_ws_ls(WeatherDataURL)
View(WeatherDataURL)
View(WeatherDataURL)
gs_ws_ls(WeatherDataURL)
AllWeatherData <- gs_read(ss=WeatherDataURL, ws = “MayWeather”, skip = 0)
str(AllWeatherData)
AllWeatherData <- gs_read(ss=WeatherDataURL, ws = MayWeather, skip = 0)
str(AllWeatherData)
AllWeatherData <- gs_read(ss=WeatherDataURL, ws = MayWeather, skip = 0)
gs_ws_ls(WeatherDataURL)
AllWeatherData <- gs_read(ss=WeatherDataURL, ws = MayWeather, skip = 0)
defaults write org.R-project.R force.LANG en_US.UTF-8
.rs.restartR()
0.15 * 19.71
install.packages("tidyverse")
install.packages(dslabs)
install.packages("dslabs")
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
View(murders)
source('~/.active-rstudio-document', echo=TRUE)
View(murders)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
View(murders)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
result <- ifelse(a > 0, 1/a, NA)
a <- c(0, 1, 2, -4, 5)
result <- ifelse(a > 0, 1/a, NA)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
c(1,2,3,4)
c(1:4,2:8)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
plot(1:4,1:4)
plot(1:1000,1:1000)
plot(1,1)
as.Date("01-12-2020", "%d-%m-%y")
as.Date("01-22-2020", "%d-%m-%y")
as.Date("01-22-20", "%d-%m-%y")
as.Date("01-22-20", "%d-%m-%Y")
as.Date("01-22-20", "%d-%m-%y")
source('~/.active-rstudio-document', echo=TRUE)
x <- repeat(3)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Práctica 1/script.R', echo=TRUE)
pwd
pwd()
source('~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Práctica 1/script.R', echo=TRUE)
install.packages(c("e1071", "gdata", "Hmisc", "imputeTS", "inspectdf", "xtable"))
setwd("~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company")
setwd("~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company")
setwd("~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company")
# Load Dataset splitted by (;) and map the empty values ("") to NA
insurance_dataset <-
read.csv2("./base_clientes.csv", na.strings = c("", "NA"))
# Head of first six elements
head(insurance_dataset)
# Print the structure of the data
str(insurance_dataset)
# Print summary of the data
summary(insurance_dataset)
# ANOMALIES
# WRONG VARIABLE FORMAT
# Print the variable type for each feature because looks like their types does not correspond
cat("The variable type for date is:",
class(insurance_dataset$date),
"\n")
cat("The variable type for sex is:",
class(insurance_dataset$sex),
"\n")
cat("The variable type for age is:",
class(insurance_dataset$age),
"\n")
cat("The variable type for vehicle is:",
class(insurance_dataset$vehicle),
"\n")
# Now, let's try to cast some features because they are not using the right format
# First, convert date as a Date format instead of a factor
insurance_dataset$date <-
as.Date(insurance_dataset$date, format = "%m/%d/%Y")
# Second, convert sex to a factor instead of a integer because it is a qualitative value
insurance_dataset$sex <-
factor(
insurance_dataset$sex,
levels = c("1", "2"),
labels = c("Female", "Male")
)
# Third, convert vehicle to boolean because it is a yes or not value
insurance_dataset$vehicle <- as.logical(factor(
insurance_dataset$vehicle,
levels = c("YES", "NO"),
labels = c("True", "False")
))
# Finally, convert age as a cuantitative value instead of a qualitative. For that, cast to an integer value
suppressWarnings(insurance_dataset$age <-
as.integer(as.character(insurance_dataset$age)))
insurance_dataset[is.na(insurance_dataset$age)]
insurance_dataset[is.na(insurance_dataset$age),]
insurance_dataset[insurance_dataset$custid==17946,]
# Load Dataset splitted by (;) and map the empty values ("") to NA
insurance_dataset <-
read.csv2("./base_clientes.csv", na.strings = c("", "NA"))
# Head of first six elements
head(insurance_dataset)
# Print the structure of the data
str(insurance_dataset)
# Print summary of the data
summary(insurance_dataset)
# ANOMALIES
# WRONG VARIABLE FORMAT
# Print the variable type for each feature because looks like their types does not correspond
cat("The variable type for date is:",
class(insurance_dataset$date),
"\n")
cat("The variable type for sex is:",
class(insurance_dataset$sex),
"\n")
cat("The variable type for age is:",
class(insurance_dataset$age),
"\n")
cat("The variable type for vehicle is:",
class(insurance_dataset$vehicle),
"\n")
# Now, let's try to cast some features because they are not using the right format
# First, convert date as a Date format instead of a factor
insurance_dataset$date <-
as.Date(insurance_dataset$date, format = "%m/%d/%Y")
# Second, convert sex to a factor instead of a integer because it is a qualitative value
insurance_dataset$sex <-
factor(
insurance_dataset$sex,
levels = c("1", "2"),
labels = c("Female", "Male")
)
# Third, convert vehicle to boolean because it is a yes or not value
insurance_dataset$vehicle <- as.logical(factor(
insurance_dataset$vehicle,
levels = c("YES", "NO"),
labels = c("True", "False")
))
# Finally, convert age as a cuantitative value instead of a qualitative. For that, cast to an integer value
insurance_dataset[insurance_dataset$custid==17946,]
source('~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company/Seguros.R', echo=TRUE)
source('~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company/Seguros.R', echo=TRUE)
source('~/Desktop/OneDrive - Universidad Icesi/Maestría/EDA/Talleres/Insurance-Company/Seguros.R', echo=TRUE)
